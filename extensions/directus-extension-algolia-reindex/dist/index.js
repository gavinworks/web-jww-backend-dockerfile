import{createHmac as e}from"crypto";import*as t from"http";import{Agent as r}from"http";import*as s from"https";import{Agent as a}from"https";import{parse as o}from"url";function n(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}function i(e){if(e.__esModule)return e;var t=e.default;if("function"==typeof t){var r=function e(){return this instanceof e?Reflect.construct(t,arguments,this.constructor):t.apply(this,arguments)};r.prototype=t.prototype}else r={};return Object.defineProperty(r,"__esModule",{value:!0}),Object.keys(e).forEach((function(t){var s=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(r,t,s.get?s:{enumerable:!0,get:function(){return e[t]}})})),r}var c={exports:{}};function l(){return{get:(e,t,r={miss:()=>Promise.resolve()})=>t().then((e=>Promise.all([e,r.miss(e)]))).then((([e])=>e)),set:(e,t)=>Promise.resolve(t),delete:e=>Promise.resolve(),clear:()=>Promise.resolve()}}var d=Object.freeze({__proto__:null,createFallbackableCache:function e(t){const r=[...t.caches],s=r.shift();return void 0===s?l():{get:(t,a,o={miss:()=>Promise.resolve()})=>s.get(t,a,o).catch((()=>e({caches:r}).get(t,a,o))),set:(t,a)=>s.set(t,a).catch((()=>e({caches:r}).set(t,a))),delete:t=>s.delete(t).catch((()=>e({caches:r}).delete(t))),clear:()=>s.clear().catch((()=>e({caches:r}).clear()))}},createNullCache:l}),u=i(d);var p=i(Object.freeze({__proto__:null,createInMemoryCache:function(e={serializable:!0}){let t={};return{get(r,s,a={miss:()=>Promise.resolve()}){const o=JSON.stringify(r);if(o in t)return Promise.resolve(e.serializable?JSON.parse(t[o]):t[o]);const n=s(),i=a&&a.miss||(()=>Promise.resolve());return n.then((e=>i(e))).then((()=>n))},set:(r,s)=>(t[JSON.stringify(r)]=e.serializable?JSON.stringify(s):s,Promise.resolve(s)),delete:e=>(delete t[JSON.stringify(e)],Promise.resolve()),clear:()=>(t={},Promise.resolve())}}}));function h(e,t,r){const s={"x-algolia-api-key":r,"x-algolia-application-id":t};return{headers:()=>e===P.WithinHeaders?s:{},queryParameters:()=>e===P.WithinQueryParameters?s:{}}}function m(e){let t=0;const r=()=>(t++,new Promise((s=>{setTimeout((()=>{s(e(r))}),Math.min(100*t,1e3))})));return e(r)}function g(e,t=(e,t)=>Promise.resolve()){return Object.assign(e,{wait:r=>g(e.then((e=>Promise.all([t(e,r),e]))).then((e=>e[1])))})}function y(e){let t=e.length-1;for(;t>0;t--){const r=Math.floor(Math.random()*(t+1)),s=e[t];e[t]=e[r],e[r]=s}return e}function b(e,t){return t?(Object.keys(t).forEach((r=>{e[r]=t[r](e)})),e):e}function f(e,...t){let r=0;return e.replace(/%s/g,(()=>encodeURIComponent(t[r++])))}const P={WithinQueryParameters:0,WithinHeaders:1};var I=Object.freeze({__proto__:null,AuthMode:P,addMethods:b,createAuth:h,createRetryablePromise:m,createWaitablePromise:g,destroy:e=>()=>e.transporter.requester.destroy(),encode:f,shuffle:y,version:"4.24.0"});const D={Delete:"DELETE",Get:"GET",Post:"POST",Put:"PUT"};var A=Object.freeze({__proto__:null,MethodEnum:D});function x(e,t){const r=e||{},s=r.data||{};return Object.keys(r).forEach((e=>{-1===["timeout","headers","queryParameters","data","cacheable"].indexOf(e)&&(s[e]=r[e])})),{data:Object.entries(s).length>0?s:void 0,timeout:r.timeout||t,headers:r.headers||{},queryParameters:r.queryParameters||{},cacheable:r.cacheable}}const j={Read:1,Write:2,Any:3},O={Up:1,Down:2,Timeouted:3},v=12e4;function S(e,t=O.Up){return{...e,status:t,lastUpdate:Date.now()}}function w(e){return e.status===O.Up||Date.now()-e.lastUpdate>v}function q(e){return e.status===O.Timeouted&&Date.now()-e.lastUpdate<=v}function T(e){return"string"==typeof e?{protocol:"https",url:e,accept:j.Any}:{protocol:e.protocol||"https",url:e.url,accept:e.accept||j.Any}}function k(e,t,r,s){const a=[],o=_(r,s),n=F(e,s),i=r.method,c=r.method!==D.Get?{}:{...r.data,...s.data},l={"x-algolia-agent":e.userAgent.value,...e.queryParameters,...c,...s.queryParameters};let d=0;const u=(t,c)=>{const p=t.pop();if(void 0===p)throw L(M(a));const h={data:o,headers:n,method:i,url:C(p,r.path,l),connectTimeout:c(d,e.timeouts.connect),responseTimeout:c(d,s.timeout)},m=e=>{const r={request:h,response:e,host:p,triesLeft:t.length};return a.push(r),r},g={onSuccess:e=>R(e),onRetry(r){const s=m(r);return r.isTimedOut&&d++,Promise.all([e.logger.info("Retryable failure",z(s)),e.hostsCache.set(p,S(p,r.isTimedOut?O.Timeouted:O.Down))]).then((()=>u(t,c)))},onFail(e){throw m(e),N(e,M(a))}};return e.requester.send(h).then((e=>((e,t)=>(e=>{const t=e.status;return e.isTimedOut||(({isTimedOut:e,status:t})=>!e&&!~~t)(e)||2!=~~(t/100)&&4!=~~(t/100)})(e)?t.onRetry(e):(({status:e})=>2==~~(e/100))(e)?t.onSuccess(e):t.onFail(e))(e,g)))};return function(e,t){return Promise.all(t.map((t=>e.get(t,(()=>Promise.resolve(S(t))))))).then((e=>{const r=e.filter((e=>w(e))),s=e.filter((e=>q(e))),a=[...r,...s];return{getTimeout:(e,t)=>(0===s.length&&0===e?1:s.length+3+e)*t,statelessHosts:a.length>0?a.map((e=>T(e))):t}}))}(e.hostsCache,t).then((e=>u([...e.statelessHosts].reverse(),e.getTimeout)))}function E(e){const{hostsCache:t,logger:r,requester:s,requestsCache:a,responsesCache:o,timeouts:n,userAgent:i,hosts:c,queryParameters:l,headers:d}=e,u={hostsCache:t,logger:r,requester:s,requestsCache:a,responsesCache:o,timeouts:n,userAgent:i,headers:d,queryParameters:l,hosts:c.map((e=>T(e))),read(e,t){const r=x(t,u.timeouts.read),s=()=>k(u,u.hosts.filter((e=>!!(e.accept&j.Read))),e,r);if(!0!==(void 0!==r.cacheable?r.cacheable:e.cacheable))return s();const a={request:e,mappedRequestOptions:r,transporter:{queryParameters:u.queryParameters,headers:u.headers}};return u.responsesCache.get(a,(()=>u.requestsCache.get(a,(()=>u.requestsCache.set(a,s()).then((e=>Promise.all([u.requestsCache.delete(a),e])),(e=>Promise.all([u.requestsCache.delete(a),Promise.reject(e)]))).then((([e,t])=>t))))),{miss:e=>u.responsesCache.set(a,e)})},write:(e,t)=>k(u,u.hosts.filter((e=>!!(e.accept&j.Write))),e,x(t,u.timeouts.write))};return u}function R(e){try{return JSON.parse(e.content)}catch(t){throw G(t.message,e)}}function N({content:e,status:t},r){let s=e;try{s=JSON.parse(e).message}catch(e){}return B(s,t,r)}function C(e,t,r){const s=U(r);let a=`${e.protocol}://${e.url}/${"/"===t.charAt(0)?t.substr(1):t}`;return s.length&&(a+=`?${s}`),a}function U(e){return Object.keys(e).map((t=>{return function(e,...t){let r=0;return e.replace(/%s/g,(()=>encodeURIComponent(t[r++])))}("%s=%s",t,(r=e[t],"[object Object]"===Object.prototype.toString.call(r)||"[object Array]"===Object.prototype.toString.call(r)?JSON.stringify(e[t]):e[t]));var r})).join("&")}function _(e,t){if(e.method===D.Get||void 0===e.data&&void 0===t.data)return;const r=Array.isArray(e.data)?e.data:{...e.data,...t.data};return JSON.stringify(r)}function F(e,t){const r={...e.headers,...t.headers},s={};return Object.keys(r).forEach((e=>{const t=r[e];s[e.toLowerCase()]=t})),s}function M(e){return e.map((e=>z(e)))}function z(e){const t=e.request.headers["x-algolia-api-key"]?{"x-algolia-api-key":"*****"}:{};return{...e,request:{...e.request,headers:{...e.request.headers,...t}}}}function B(e,t,r){return{name:"ApiError",message:e,status:t,transporterStackTrace:r}}function G(e,t){return{name:"DeserializationError",message:e,response:t}}function L(e){return{name:"RetryError",message:"Unreachable hosts - your application id may be incorrect. If the error persists, please reach out to the Algolia Support team: https://alg.li/support .",transporterStackTrace:e}}var $=Object.freeze({__proto__:null,CallEnum:j,HostStatusEnum:O,createApiError:B,createDeserializationError:G,createMappedRequestOptions:x,createRetryError:L,createStatefulHost:S,createStatelessHost:T,createTransporter:E,createUserAgent:function(e){const t={value:`Algolia for JavaScript (${e})`,add(e){const r=`; ${e.segment}${void 0!==e.version?` (${e.version})`:""}`;return-1===t.value.indexOf(r)&&(t.value=`${t.value}${r}`),t}};return t},deserializeFailure:N,deserializeSuccess:R,isStatefulHostTimeouted:q,isStatefulHostUp:w,serializeData:_,serializeHeaders:F,serializeQueryParameters:U,serializeUrl:C,stackFrameWithoutCredentials:z,stackTraceWithoutCredentials:M});var K=Object.freeze({__proto__:null,addABTest:e=>(t,r)=>e.transporter.write({method:D.Post,path:"2/abtests",data:t},r),createAnalyticsClient:e=>{const t=e.region||"us",r=h(P.WithinHeaders,e.appId,e.apiKey),s=E({hosts:[{url:`analytics.${t}.algolia.com`}],...e,headers:{...r.headers(),"content-type":"application/json",...e.headers},queryParameters:{...r.queryParameters(),...e.queryParameters}});return b({appId:e.appId,transporter:s},e.methods)},deleteABTest:e=>(t,r)=>e.transporter.write({method:D.Delete,path:f("2/abtests/%s",t)},r),getABTest:e=>(t,r)=>e.transporter.read({method:D.Get,path:f("2/abtests/%s",t)},r),getABTests:e=>t=>e.transporter.read({method:D.Get,path:"2/abtests"},t),stopABTest:e=>(t,r)=>e.transporter.write({method:D.Post,path:f("2/abtests/%s/stop",t)},r)}),H=i(K),V=i(I);var W=Object.freeze({__proto__:null,createPersonalizationClient:e=>{const t=e.region||"us",r=h(P.WithinHeaders,e.appId,e.apiKey),s=E({hosts:[{url:`personalization.${t}.algolia.com`}],...e,headers:{...r.headers(),"content-type":"application/json",...e.headers},queryParameters:{...r.queryParameters(),...e.queryParameters}});return b({appId:e.appId,transporter:s},e.methods)},getPersonalizationStrategy:e=>t=>e.transporter.read({method:D.Get,path:"1/strategies/personalization"},t),setPersonalizationStrategy:e=>(t,r)=>e.transporter.write({method:D.Post,path:"1/strategies/personalization",data:t},r)}),Q=i(W);function J(e){const t=r=>e.request(r).then((s=>{if(void 0!==e.batch&&e.batch(s.hits),!e.shouldStop(s))return s.cursor?t({cursor:s.cursor}):t({page:(r.page||0)+1})}));return t({})}function X(){return{name:"MissingObjectIDError",message:"All objects must have an unique objectID (like a primary key) to be valid. Algolia is also able to generate objectIDs automatically but *it's not recommended*. To do it, use the `{'autoGenerateObjectIDIfNotExist': true}` option."}}function Y(){return{name:"ObjectNotFoundError",message:"Object not found."}}function Z(){return{name:"ValidUntilNotFoundError",message:"ValidUntil not found in given secured api key."}}const ee=e=>(t,r,s)=>g(e.transporter.write({method:D.Post,path:f("1/indexes/%s/operation",t),data:{operation:"copy",destination:r}},s),((r,s)=>se(e)(t,{methods:{waitTask:fe}}).waitTask(r.taskID,s))),te=e=>(t,r)=>e.transporter.read({method:D.Get,path:f("1/keys/%s",t)},r),re=e=>(t,r)=>e.transporter.read({method:D.Get,path:f("1/task/%s",t.toString())},r),se=e=>(t,r={})=>b({transporter:e.transporter,appId:e.appId,indexName:t},r.methods),ae=e=>(t,r)=>m((s=>re(e)(t,r).then((e=>"published"!==e.status?s():void 0)))),oe=e=>(t,r)=>g(e.transporter.write({method:D.Post,path:f("1/indexes/%s/batch",e.indexName),data:{requests:t}},r),((t,r)=>fe(e)(t.taskID,r))),ne=e=>(t,r,s)=>{const{batchSize:a,...o}=s||{},n={taskIDs:[],objectIDs:[]},i=(s=0)=>{const c=[];let l;for(l=s;l<t.length&&(c.push(t[l]),c.length!==(a||1e3));l++);return 0===c.length?Promise.resolve(n):oe(e)(c.map((e=>({action:r,body:e}))),o).then((e=>(n.objectIDs=n.objectIDs.concat(e.objectIDs),n.taskIDs.push(e.taskID),l++,i(l))))};return g(i(),((t,r)=>Promise.all(t.taskIDs.map((t=>fe(e)(t,r))))))},ie=e=>(t,r)=>{const s=t.map((e=>({objectID:e})));return ne(e)(s,Pe.DeleteObject,r)},ce=e=>t=>e.transporter.read({method:D.Get,path:f("1/indexes/%s/settings",e.indexName),data:{getVersion:2}},t),le=e=>(t,r)=>e.transporter.read({method:D.Get,path:f("1/indexes/%s/task/%s",e.indexName,t.toString())},r),de=e=>(t,r)=>{const{createIfNotExists:s,...a}=r||{},o=s?Pe.PartialUpdateObject:Pe.PartialUpdateObjectNoCreate;return ne(e)(t,o,a)},ue=e=>(t,r)=>{const{autoGenerateObjectIDIfNotExist:s,...a}=r||{},o=s?Pe.AddObject:Pe.UpdateObject;if(o===Pe.UpdateObject)for(const e of t)if(void 0===e.objectID)return g(Promise.reject({name:"MissingObjectIDError",message:"All objects must have an unique objectID (like a primary key) to be valid. Algolia is also able to generate objectIDs automatically but *it's not recommended*. To do it, use the `{'autoGenerateObjectIDIfNotExist': true}` option."}));return ne(e)(t,o,a)},pe=e=>(t,r)=>{const{forwardToReplicas:s,clearExistingRules:a,...o}=r||{},n=x(o);return s&&(n.queryParameters.forwardToReplicas=1),a&&(n.queryParameters.clearExistingRules=1),g(e.transporter.write({method:D.Post,path:f("1/indexes/%s/rules/batch",e.indexName),data:t},n),((t,r)=>fe(e)(t.taskID,r)))},he=e=>(t,r)=>{const{forwardToReplicas:s,clearExistingSynonyms:a,replaceExistingSynonyms:o,...n}=r||{},i=x(n);return s&&(i.queryParameters.forwardToReplicas=1),(o||a)&&(i.queryParameters.replaceExistingSynonyms=1),g(e.transporter.write({method:D.Post,path:f("1/indexes/%s/synonyms/batch",e.indexName),data:t},i),((t,r)=>fe(e)(t.taskID,r)))},me=e=>(t,r)=>e.transporter.read({method:D.Post,path:f("1/indexes/%s/query",e.indexName),data:{query:t},cacheable:!0},r),ge=e=>(t,r,s)=>e.transporter.read({method:D.Post,path:f("1/indexes/%s/facets/%s/query",e.indexName,t),data:{facetQuery:r},cacheable:!0},s),ye=e=>(t,r)=>e.transporter.read({method:D.Post,path:f("1/indexes/%s/rules/search",e.indexName),data:{query:t}},r),be=e=>(t,r)=>e.transporter.read({method:D.Post,path:f("1/indexes/%s/synonyms/search",e.indexName),data:{query:t}},r),fe=e=>(t,r)=>m((s=>le(e)(t,r).then((e=>"published"!==e.status?s():void 0)))),Pe={AddObject:"addObject",UpdateObject:"updateObject",PartialUpdateObject:"partialUpdateObject",PartialUpdateObjectNoCreate:"partialUpdateObjectNoCreate",DeleteObject:"deleteObject",DeleteIndex:"delete",ClearIndex:"clear"},Ie={Settings:"settings",Synonyms:"synonyms",Rules:"rules"};var De=Object.freeze({__proto__:null,ApiKeyACLEnum:{AddObject:"addObject",Analytics:"analytics",Browser:"browse",DeleteIndex:"deleteIndex",DeleteObject:"deleteObject",EditSettings:"editSettings",Inference:"inference",ListIndexes:"listIndexes",Logs:"logs",Personalization:"personalization",Recommendation:"recommendation",Search:"search",SeeUnretrievableAttributes:"seeUnretrievableAttributes",Settings:"settings",Usage:"usage"},BatchActionEnum:Pe,ScopeEnum:Ie,StrategyEnum:{None:"none",StopIfEnoughMatches:"stopIfEnoughMatches"},SynonymEnum:{Synonym:"synonym",OneWaySynonym:"oneWaySynonym",AltCorrection1:"altCorrection1",AltCorrection2:"altCorrection2",Placeholder:"placeholder"},addApiKey:e=>(t,r)=>{const{queryParameters:s,...a}=r||{},o={acl:t,...void 0!==s?{queryParameters:s}:{}};return g(e.transporter.write({method:D.Post,path:"1/keys",data:o},a),((t,r)=>m((s=>te(e)(t.key,r).catch((e=>{if(404!==e.status)throw e;return s()}))))))},assignUserID:e=>(t,r,s)=>{const a=x(s);return a.queryParameters["X-Algolia-User-ID"]=t,e.transporter.write({method:D.Post,path:"1/clusters/mapping",data:{cluster:r}},a)},assignUserIDs:e=>(t,r,s)=>e.transporter.write({method:D.Post,path:"1/clusters/mapping/batch",data:{users:t,cluster:r}},s),batch:oe,browseObjects:e=>t=>J({shouldStop:e=>void 0===e.cursor,...t,request:r=>e.transporter.read({method:D.Post,path:f("1/indexes/%s/browse",e.indexName),data:r},t)}),browseRules:e=>t=>{const r={hitsPerPage:1e3,...t};return J({shouldStop:e=>e.hits.length<r.hitsPerPage,...r,request:t=>ye(e)("",{...r,...t}).then((e=>({...e,hits:e.hits.map((e=>(delete e._highlightResult,e)))})))})},browseSynonyms:e=>t=>{const r={hitsPerPage:1e3,...t};return J({shouldStop:e=>e.hits.length<r.hitsPerPage,...r,request:t=>be(e)("",{...r,...t}).then((e=>({...e,hits:e.hits.map((e=>(delete e._highlightResult,e)))})))})},chunkedBatch:ne,clearDictionaryEntries:e=>(t,r)=>g(e.transporter.write({method:D.Post,path:f("/1/dictionaries/%s/batch",t),data:{clearExistingDictionaryEntries:!0,requests:{action:"addEntry",body:[]}}},r),((t,r)=>ae(e)(t.taskID,r))),clearObjects:e=>t=>g(e.transporter.write({method:D.Post,path:f("1/indexes/%s/clear",e.indexName)},t),((t,r)=>fe(e)(t.taskID,r))),clearRules:e=>t=>{const{forwardToReplicas:r,...s}=t||{},a=x(s);return r&&(a.queryParameters.forwardToReplicas=1),g(e.transporter.write({method:D.Post,path:f("1/indexes/%s/rules/clear",e.indexName)},a),((t,r)=>fe(e)(t.taskID,r)))},clearSynonyms:e=>t=>{const{forwardToReplicas:r,...s}=t||{},a=x(s);return r&&(a.queryParameters.forwardToReplicas=1),g(e.transporter.write({method:D.Post,path:f("1/indexes/%s/synonyms/clear",e.indexName)},a),((t,r)=>fe(e)(t.taskID,r)))},copyIndex:ee,copyRules:e=>(t,r,s)=>ee(e)(t,r,{...s,scope:[Ie.Rules]}),copySettings:e=>(t,r,s)=>ee(e)(t,r,{...s,scope:[Ie.Settings]}),copySynonyms:e=>(t,r,s)=>ee(e)(t,r,{...s,scope:[Ie.Synonyms]}),createBrowsablePromise:J,createMissingObjectIDError:X,createObjectNotFoundError:Y,createSearchClient:e=>{const t=e.appId,r=h(void 0!==e.authMode?e.authMode:P.WithinHeaders,t,e.apiKey),s=E({hosts:[{url:`${t}-dsn.algolia.net`,accept:j.Read},{url:`${t}.algolia.net`,accept:j.Write}].concat(y([{url:`${t}-1.algolianet.com`},{url:`${t}-2.algolianet.com`},{url:`${t}-3.algolianet.com`}])),...e,headers:{...r.headers(),"content-type":"application/x-www-form-urlencoded",...e.headers},queryParameters:{...r.queryParameters(),...e.queryParameters}}),a={transporter:s,appId:t,addAlgoliaAgent(e,t){s.userAgent.add({segment:e,version:t})},clearCache:()=>Promise.all([s.requestsCache.clear(),s.responsesCache.clear()]).then((()=>{}))};return b(a,e.methods)},createValidUntilNotFoundError:Z,customRequest:e=>(t,r)=>t.method===D.Get?e.transporter.read(t,r):e.transporter.write(t,r),deleteApiKey:e=>(t,r)=>g(e.transporter.write({method:D.Delete,path:f("1/keys/%s",t)},r),((r,s)=>m((r=>te(e)(t,s).then(r).catch((e=>{if(404!==e.status)throw e})))))),deleteBy:e=>(t,r)=>g(e.transporter.write({method:D.Post,path:f("1/indexes/%s/deleteByQuery",e.indexName),data:t},r),((t,r)=>fe(e)(t.taskID,r))),deleteDictionaryEntries:e=>(t,r,s)=>{const a=r.map((e=>({action:"deleteEntry",body:{objectID:e}})));return g(e.transporter.write({method:D.Post,path:f("/1/dictionaries/%s/batch",t),data:{clearExistingDictionaryEntries:!1,requests:a}},s),((t,r)=>ae(e)(t.taskID,r)))},deleteIndex:e=>t=>g(e.transporter.write({method:D.Delete,path:f("1/indexes/%s",e.indexName)},t),((t,r)=>fe(e)(t.taskID,r))),deleteObject:e=>(t,r)=>g(ie(e)([t],r).then((e=>({taskID:e.taskIDs[0]}))),((t,r)=>fe(e)(t.taskID,r))),deleteObjects:ie,deleteRule:e=>(t,r)=>{const{forwardToReplicas:s,...a}=r||{},o=x(a);return s&&(o.queryParameters.forwardToReplicas=1),g(e.transporter.write({method:D.Delete,path:f("1/indexes/%s/rules/%s",e.indexName,t)},o),((t,r)=>fe(e)(t.taskID,r)))},deleteSynonym:e=>(t,r)=>{const{forwardToReplicas:s,...a}=r||{},o=x(a);return s&&(o.queryParameters.forwardToReplicas=1),g(e.transporter.write({method:D.Delete,path:f("1/indexes/%s/synonyms/%s",e.indexName,t)},o),((t,r)=>fe(e)(t.taskID,r)))},exists:e=>t=>ce(e)(t).then((()=>!0)).catch((e=>{if(404!==e.status)throw e;return!1})),findAnswers:e=>(t,r,s)=>e.transporter.read({method:D.Post,path:f("1/answers/%s/prediction",e.indexName),data:{query:t,queryLanguages:r},cacheable:!0},s),findObject:e=>(t,r)=>{const{query:s,paginate:a,...o}=r||{};let n=0;const i=()=>me(e)(s||"",{...o,page:n}).then((e=>{for(const[r,s]of Object.entries(e.hits))if(t(s))return{object:s,position:parseInt(r,10),page:n};if(n++,!1===a||n>=e.nbPages)throw{name:"ObjectNotFoundError",message:"Object not found."};return i()}));return i()},generateSecuredApiKey:()=>(t,r)=>{const s=U(r),a=e("sha256",t).update(s).digest("hex");return Buffer.from(a+s).toString("base64")},getApiKey:te,getAppTask:re,getDictionarySettings:e=>t=>e.transporter.read({method:D.Get,path:"/1/dictionaries/*/settings"},t),getLogs:e=>t=>e.transporter.read({method:D.Get,path:"1/logs"},t),getObject:e=>(t,r)=>e.transporter.read({method:D.Get,path:f("1/indexes/%s/%s",e.indexName,t)},r),getObjectPosition:()=>(e,t)=>{for(const[r,s]of Object.entries(e.hits))if(s.objectID===t)return parseInt(r,10);return-1},getObjects:e=>(t,r)=>{const{attributesToRetrieve:s,...a}=r||{},o=t.map((t=>({indexName:e.indexName,objectID:t,...s?{attributesToRetrieve:s}:{}})));return e.transporter.read({method:D.Post,path:"1/indexes/*/objects",data:{requests:o}},a)},getRule:e=>(t,r)=>e.transporter.read({method:D.Get,path:f("1/indexes/%s/rules/%s",e.indexName,t)},r),getSecuredApiKeyRemainingValidity:()=>e=>{const t=Buffer.from(e,"base64").toString("ascii").match(/validUntil=(\d+)/);if(null===t)throw{name:"ValidUntilNotFoundError",message:"ValidUntil not found in given secured api key."};return parseInt(t[1],10)-Math.round((new Date).getTime()/1e3)},getSettings:ce,getSynonym:e=>(t,r)=>e.transporter.read({method:D.Get,path:f("1/indexes/%s/synonyms/%s",e.indexName,t)},r),getTask:le,getTopUserIDs:e=>t=>e.transporter.read({method:D.Get,path:"1/clusters/mapping/top"},t),getUserID:e=>(t,r)=>e.transporter.read({method:D.Get,path:f("1/clusters/mapping/%s",t)},r),hasPendingMappings:e=>t=>{const{retrieveMappings:r,...s}=t||{};return!0===r&&(s.getClusters=!0),e.transporter.read({method:D.Get,path:"1/clusters/mapping/pending"},s)},initIndex:se,listApiKeys:e=>t=>e.transporter.read({method:D.Get,path:"1/keys"},t),listClusters:e=>t=>e.transporter.read({method:D.Get,path:"1/clusters"},t),listIndices:e=>t=>e.transporter.read({method:D.Get,path:"1/indexes"},t),listUserIDs:e=>t=>e.transporter.read({method:D.Get,path:"1/clusters/mapping"},t),moveIndex:e=>(t,r,s)=>g(e.transporter.write({method:D.Post,path:f("1/indexes/%s/operation",t),data:{operation:"move",destination:r}},s),((r,s)=>se(e)(t,{methods:{waitTask:fe}}).waitTask(r.taskID,s))),multipleBatch:e=>(t,r)=>g(e.transporter.write({method:D.Post,path:"1/indexes/*/batch",data:{requests:t}},r),((t,r)=>Promise.all(Object.keys(t.taskID).map((s=>se(e)(s,{methods:{waitTask:fe}}).waitTask(t.taskID[s],r)))))),multipleGetObjects:e=>(t,r)=>e.transporter.read({method:D.Post,path:"1/indexes/*/objects",data:{requests:t}},r),multipleQueries:e=>(t,r)=>{const s=t.map((e=>({...e,params:U(e.params||{})})));return e.transporter.read({method:D.Post,path:"1/indexes/*/queries",data:{requests:s},cacheable:!0},r)},multipleSearchForFacetValues:e=>(t,r)=>Promise.all(t.map((t=>{const{facetName:s,facetQuery:a,...o}=t.params;return se(e)(t.indexName,{methods:{searchForFacetValues:ge}}).searchForFacetValues(s,a,{...r,...o})}))),partialUpdateObject:e=>(t,r)=>g(de(e)([t],r).then((e=>({objectID:e.objectIDs[0],taskID:e.taskIDs[0]}))),((t,r)=>fe(e)(t.taskID,r))),partialUpdateObjects:de,removeUserID:e=>(t,r)=>{const s=x(r);return s.queryParameters["X-Algolia-User-ID"]=t,e.transporter.write({method:D.Delete,path:"1/clusters/mapping"},s)},replaceAllObjects:e=>(t,r)=>{const{safe:s,autoGenerateObjectIDIfNotExist:a,batchSize:o,...n}=r||{},i=(t,r,s,a)=>g(e.transporter.write({method:D.Post,path:f("1/indexes/%s/operation",t),data:{operation:s,destination:r}},a),((t,r)=>fe(e)(t.taskID,r))),c=Math.random().toString(36).substring(7),l=`${e.indexName}_tmp_${c}`,d=ue({appId:e.appId,transporter:e.transporter,indexName:l});let u=[];const p=i(e.indexName,l,"copy",{...n,scope:["settings","synonyms","rules"]});u.push(p);return g((s?p.wait(n):p).then((()=>{const e=d(t,{...n,autoGenerateObjectIDIfNotExist:a,batchSize:o});return u.push(e),s?e.wait(n):e})).then((()=>{const t=i(l,e.indexName,"move",n);return u.push(t),s?t.wait(n):t})).then((()=>Promise.all(u))).then((([e,t,r])=>({objectIDs:t.objectIDs,taskIDs:[e.taskID,...t.taskIDs,r.taskID]}))),((e,t)=>Promise.all(u.map((e=>e.wait(t))))))},replaceAllRules:e=>(t,r)=>pe(e)(t,{...r,clearExistingRules:!0}),replaceAllSynonyms:e=>(t,r)=>he(e)(t,{...r,clearExistingSynonyms:!0}),replaceDictionaryEntries:e=>(t,r,s)=>{const a=r.map((e=>({action:"addEntry",body:e})));return g(e.transporter.write({method:D.Post,path:f("/1/dictionaries/%s/batch",t),data:{clearExistingDictionaryEntries:!0,requests:a}},s),((t,r)=>ae(e)(t.taskID,r)))},restoreApiKey:e=>(t,r)=>g(e.transporter.write({method:D.Post,path:f("1/keys/%s/restore",t)},r),((r,s)=>m((r=>te(e)(t,s).catch((e=>{if(404!==e.status)throw e;return r()})))))),saveDictionaryEntries:e=>(t,r,s)=>{const a=r.map((e=>({action:"addEntry",body:e})));return g(e.transporter.write({method:D.Post,path:f("/1/dictionaries/%s/batch",t),data:{clearExistingDictionaryEntries:!1,requests:a}},s),((t,r)=>ae(e)(t.taskID,r)))},saveObject:e=>(t,r)=>g(ue(e)([t],r).then((e=>({objectID:e.objectIDs[0],taskID:e.taskIDs[0]}))),((t,r)=>fe(e)(t.taskID,r))),saveObjects:ue,saveRule:e=>(t,r)=>pe(e)([t],r),saveRules:pe,saveSynonym:e=>(t,r)=>he(e)([t],r),saveSynonyms:he,search:me,searchDictionaryEntries:e=>(t,r,s)=>e.transporter.read({method:D.Post,path:f("/1/dictionaries/%s/search",t),data:{query:r},cacheable:!0},s),searchForFacetValues:ge,searchRules:ye,searchSynonyms:be,searchUserIDs:e=>(t,r)=>e.transporter.read({method:D.Post,path:"1/clusters/mapping/search",data:{query:t}},r),setDictionarySettings:e=>(t,r)=>g(e.transporter.write({method:D.Put,path:"/1/dictionaries/*/settings",data:t},r),((t,r)=>ae(e)(t.taskID,r))),setSettings:e=>(t,r)=>{const{forwardToReplicas:s,...a}=r||{},o=x(a);return s&&(o.queryParameters.forwardToReplicas=1),g(e.transporter.write({method:D.Put,path:f("1/indexes/%s/settings",e.indexName),data:t},o),((t,r)=>fe(e)(t.taskID,r)))},updateApiKey:e=>(t,r)=>{const s=Object.assign({},r),{queryParameters:a,...o}=r||{},n=a?{queryParameters:a}:{},i=["acl","indexes","referers","restrictSources","queryParameters","description","maxQueriesPerIPPerHour","maxHitsPerQuery"];return g(e.transporter.write({method:D.Put,path:f("1/keys/%s",t),data:n},o),((r,a)=>m((r=>te(e)(t,a).then((e=>(e=>Object.keys(s).filter((e=>-1!==i.indexOf(e))).every((t=>{if(Array.isArray(e[t])&&Array.isArray(s[t])){const r=e[t];return r.length===s[t].length&&r.every(((e,r)=>e===s[t][r]))}return e[t]===s[t]})))(e)?Promise.resolve():r()))))))},waitAppTask:ae,waitTask:fe}),Ae=i(De);var xe=i(Object.freeze({__proto__:null,LogLevelEnum:{Debug:1,Info:2,Error:3},createNullLogger:function(){return{debug:(e,t)=>Promise.resolve(),info:(e,t)=>Promise.resolve(),error:(e,t)=>Promise.resolve()}}})),je={exports:{}};const Oe={keepAlive:!0},ve=new r(Oe),Se=new a(Oe);var we=i(Object.freeze({__proto__:null,createNodeHttpRequester:function({agent:e,httpAgent:r,httpsAgent:a,requesterOptions:n={}}={}){const i=r||e||ve,c=a||e||Se;return{send:e=>new Promise((r=>{const a=o(e.url),l=null===a.query?a.pathname:`${a.pathname}?${a.query}`,d={...n,agent:"https:"===a.protocol?c:i,hostname:a.hostname,path:l,method:e.method,headers:{...n&&n.headers?n.headers:{},...e.headers},...void 0!==a.port?{port:a.port||""}:{}},u=("https:"===a.protocol?s:t).request(d,(e=>{let t=[];e.on("data",(e=>{t=t.concat(e)})),e.on("end",(()=>{clearTimeout(h),clearTimeout(m),r({status:e.statusCode||0,content:Buffer.concat(t).toString(),isTimedOut:!1})}))})),p=(e,t)=>setTimeout((()=>{u.abort(),r({status:0,content:t,isTimedOut:!0})}),1e3*e),h=p(e.connectTimeout,"Connection timeout");let m;u.on("error",(e=>{clearTimeout(h),clearTimeout(m),r({status:0,content:e.message,isTimedOut:!1})})),u.once("response",(()=>{clearTimeout(h),m=p(e.responseTimeout,"Socket timeout")})),void 0!==e.data&&u.write(e.data),u.end()})),destroy:()=>(i.destroy(),c.destroy(),Promise.resolve())}}})),qe=i($),Te=u,ke=p,Ee=V,Re=xe,Ne=we,Ce=qe,Ue=i(A);const _e=e=>(t,r)=>{const s=t.map((e=>({...e,threshold:e.threshold||0})));return e.transporter.read({method:Ue.MethodEnum.Post,path:"1/indexes/*/recommendations",data:{requests:s},cacheable:!0},r)},Fe=e=>(t,r)=>_e(e)(t.map((e=>({...e,fallbackParameters:{},model:"bought-together"}))),r),Me=e=>(t,r)=>_e(e)(t.map((e=>({...e,model:"related-products"}))),r),ze=e=>(t,r)=>{const s=t.map((e=>({...e,model:"trending-facets",threshold:e.threshold||0})));return e.transporter.read({method:Ue.MethodEnum.Post,path:"1/indexes/*/recommendations",data:{requests:s},cacheable:!0},r)},Be=e=>(t,r)=>{const s=t.map((e=>({...e,model:"trending-items",threshold:e.threshold||0})));return e.transporter.read({method:Ue.MethodEnum.Post,path:"1/indexes/*/recommendations",data:{requests:s},cacheable:!0},r)},Ge=e=>(t,r)=>_e(e)(t.map((e=>({...e,model:"looking-similar"}))),r),Le=e=>(t,r)=>{const s=t.map((e=>({...e,model:"recommended-for-you",threshold:e.threshold||0})));return e.transporter.read({method:Ue.MethodEnum.Post,path:"1/indexes/*/recommendations",data:{requests:s},cacheable:!0},r)};function $e(e,t,r){return(e=>{const t=e.appId,r=Ee.createAuth(void 0!==e.authMode?e.authMode:Ee.AuthMode.WithinHeaders,t,e.apiKey),s=Ce.createTransporter({hosts:[{url:`${t}-dsn.algolia.net`,accept:Ce.CallEnum.Read},{url:`${t}.algolia.net`,accept:Ce.CallEnum.Write}].concat(Ee.shuffle([{url:`${t}-1.algolianet.com`},{url:`${t}-2.algolianet.com`},{url:`${t}-3.algolianet.com`}])),...e,headers:{...r.headers(),"content-type":"application/x-www-form-urlencoded",...e.headers},queryParameters:{...r.queryParameters(),...e.queryParameters}}),a={transporter:s,appId:t,addAlgoliaAgent(e,t){s.userAgent.add({segment:e,version:t})},clearCache:()=>Promise.all([s.requestsCache.clear(),s.responsesCache.clear()]).then((()=>{}))};return Ee.addMethods(a,e.methods)})({...{appId:e,apiKey:t,timeouts:{connect:2,read:5,write:30},requester:Ne.createNodeHttpRequester(),logger:Re.createNullLogger(),responsesCache:Te.createNullCache(),requestsCache:Te.createNullCache(),hostsCache:ke.createInMemoryCache(),userAgent:Ce.createUserAgent(Ee.version).add({segment:"Recommend",version:Ee.version}).add({segment:"Node.js",version:process.versions.node})},...r,methods:{destroy:Ee.destroy,getFrequentlyBoughtTogether:Fe,getRecommendations:_e,getRelatedProducts:Me,getTrendingFacets:ze,getTrendingItems:Be,getLookingSimilar:Ge,getRecommendedForYou:Le}})}$e.version=Ee.version,$e.getFrequentlyBoughtTogether=Fe,$e.getRecommendations=_e,$e.getRelatedProducts=Me,$e.getTrendingFacets=ze,$e.getTrendingItems=Be,$e.getLookingSimilar=Ge,$e.getRecommendedForYou=Le;const Ke=$e;je.exports=Ke,je.exports.default=Ke;var He=je.exports,Ve=u,We=p,Qe=H,Je=V,Xe=Q,Ye=Ae,Ze=xe,et=He,tt=we,rt=qe;function st(e,t,r){const s={appId:e,apiKey:t,timeouts:{connect:2,read:5,write:30},requester:tt.createNodeHttpRequester(),logger:Ze.createNullLogger(),responsesCache:Ve.createNullCache(),requestsCache:Ve.createNullCache(),hostsCache:We.createInMemoryCache(),userAgent:rt.createUserAgent(Je.version).add({segment:"Node.js",version:process.versions.node})},a={...s,...r},o=()=>e=>Xe.createPersonalizationClient({...s,...e,methods:{getPersonalizationStrategy:Xe.getPersonalizationStrategy,setPersonalizationStrategy:Xe.setPersonalizationStrategy}});return Ye.createSearchClient({...a,methods:{search:Ye.multipleQueries,searchForFacetValues:Ye.multipleSearchForFacetValues,multipleBatch:Ye.multipleBatch,multipleGetObjects:Ye.multipleGetObjects,multipleQueries:Ye.multipleQueries,copyIndex:Ye.copyIndex,copySettings:Ye.copySettings,copyRules:Ye.copyRules,copySynonyms:Ye.copySynonyms,moveIndex:Ye.moveIndex,listIndices:Ye.listIndices,getLogs:Ye.getLogs,listClusters:Ye.listClusters,multipleSearchForFacetValues:Ye.multipleSearchForFacetValues,getApiKey:Ye.getApiKey,addApiKey:Ye.addApiKey,listApiKeys:Ye.listApiKeys,updateApiKey:Ye.updateApiKey,deleteApiKey:Ye.deleteApiKey,restoreApiKey:Ye.restoreApiKey,assignUserID:Ye.assignUserID,assignUserIDs:Ye.assignUserIDs,getUserID:Ye.getUserID,searchUserIDs:Ye.searchUserIDs,listUserIDs:Ye.listUserIDs,getTopUserIDs:Ye.getTopUserIDs,removeUserID:Ye.removeUserID,hasPendingMappings:Ye.hasPendingMappings,generateSecuredApiKey:Ye.generateSecuredApiKey,getSecuredApiKeyRemainingValidity:Ye.getSecuredApiKeyRemainingValidity,destroy:Je.destroy,clearDictionaryEntries:Ye.clearDictionaryEntries,deleteDictionaryEntries:Ye.deleteDictionaryEntries,getDictionarySettings:Ye.getDictionarySettings,getAppTask:Ye.getAppTask,replaceDictionaryEntries:Ye.replaceDictionaryEntries,saveDictionaryEntries:Ye.saveDictionaryEntries,searchDictionaryEntries:Ye.searchDictionaryEntries,setDictionarySettings:Ye.setDictionarySettings,waitAppTask:Ye.waitAppTask,customRequest:Ye.customRequest,initIndex:e=>t=>Ye.initIndex(e)(t,{methods:{batch:Ye.batch,delete:Ye.deleteIndex,findAnswers:Ye.findAnswers,getObject:Ye.getObject,getObjects:Ye.getObjects,saveObject:Ye.saveObject,saveObjects:Ye.saveObjects,search:Ye.search,searchForFacetValues:Ye.searchForFacetValues,waitTask:Ye.waitTask,setSettings:Ye.setSettings,getSettings:Ye.getSettings,partialUpdateObject:Ye.partialUpdateObject,partialUpdateObjects:Ye.partialUpdateObjects,deleteObject:Ye.deleteObject,deleteObjects:Ye.deleteObjects,deleteBy:Ye.deleteBy,clearObjects:Ye.clearObjects,browseObjects:Ye.browseObjects,getObjectPosition:Ye.getObjectPosition,findObject:Ye.findObject,exists:Ye.exists,saveSynonym:Ye.saveSynonym,saveSynonyms:Ye.saveSynonyms,getSynonym:Ye.getSynonym,searchSynonyms:Ye.searchSynonyms,browseSynonyms:Ye.browseSynonyms,deleteSynonym:Ye.deleteSynonym,clearSynonyms:Ye.clearSynonyms,replaceAllObjects:Ye.replaceAllObjects,replaceAllSynonyms:Ye.replaceAllSynonyms,searchRules:Ye.searchRules,getRule:Ye.getRule,deleteRule:Ye.deleteRule,saveRule:Ye.saveRule,saveRules:Ye.saveRules,replaceAllRules:Ye.replaceAllRules,browseRules:Ye.browseRules,clearRules:Ye.clearRules}}),initAnalytics:()=>e=>Qe.createAnalyticsClient({...s,...e,methods:{addABTest:Qe.addABTest,getABTest:Qe.getABTest,getABTests:Qe.getABTests,stopABTest:Qe.stopABTest,deleteABTest:Qe.deleteABTest}}),initPersonalization:o,initRecommendation:()=>e=>(a.logger.info("The `initRecommendation` method is deprecated. Use `initPersonalization` instead."),o()(e)),getRecommendations:et.getRecommendations,getFrequentlyBoughtTogether:et.getFrequentlyBoughtTogether,getLookingSimilar:et.getLookingSimilar,getRecommendedForYou:et.getRecommendedForYou,getRelatedProducts:et.getRelatedProducts,getTrendingFacets:et.getTrendingFacets,getTrendingItems:et.getTrendingItems}})}st.version=Je.version;const at=st;c.exports=at,c.exports.default=at;var ot=n(c.exports),nt={id:"algolia",handler:(e,{services:t})=>{console.log("Algolia reindex extension is loading...");try{const{ItemsService:r}=t;console.log("ItemsService loaded successfully");const s=ot(process.env.ALGOLIA_APP_ID,process.env.ALGOLIA_ADMIN_API_KEY),a=s.initIndex(process.env.ALGOLIA_INDEX_NAME);console.log("Algolia client initialized with index:",process.env.ALGOLIA_INDEX_NAME);const o=e=>{if(!e)return null;const t={"Central/North/East":"Central, North, East","Durham Moor /Fram/Pity me":"Durham Moor, Fram, Pity Me","Broompark /Ushaw Moor":"Broompark, Ushaw Moor","Farewell Hall/Merryoaks":"Farewell Hall, Merryoaks","Newton Hall/Brasside":"Newton Hall, Brasside","Croxdale/Tudhoe":"Croxdale, Tudhoe"};return t[e]?t[e]:e.toLowerCase().split(" ").map((e=>e.charAt(0).toUpperCase()+e.slice(1))).join(" ")},n=e=>{let t;console.log("Transforming property:",e.code);try{t="string"==typeof e.offices?JSON.parse(e.offices):e.offices}catch(r){console.error("Error parsing offices for property:",e.code,r),t=[]}const r=t?.[0]?.id||null,s="DUS"===r?null:{DAL:"Darlington",CNL:"Consett",CLL:"Chester-le-Street",BAL:"Bishop Auckland",LET:"Durham",DUR:"Durham",BAO:"Bishop Auckland",CLS:"Chester-le-Street",CNS:"Consett",DAR:"Darlington"}[r]||null;return{objectID:e.code,code:e.code,image:e.featuredImageUrl,imagecount:e.images?.length||0,address2:e.address?.line2,address3:e.address?.line3,postcode:e.address?.postcode,_geoloc:e.address?.geolocation?{lat:e.address.geolocation.latitude,lng:e.address.geolocation.longitude}:null,bedrooms:e.bedrooms,receptions:e.receptions,bathrooms:e.bathrooms,videourl:e.video2Url,type:Array.isArray(e.type)?e.type.toString():e.type,price:e.selling?.price||e.letting?.rent||null,qualifier:e.selling?.qualifier?e.selling.qualifier.replace(/([A-Z])/g," $1").trim():null,officeid:r,mode:e.marketingMode,sellingstatus:e.selling?.status||null,lettingstatus:e.letting?.status||null,parent:s,area:o(e.area?.name)}},i=async()=>{console.log("Configuring replica index for locations...");try{await a.setSettings({replicas:[`${process.env.ALGOLIA_INDEX_NAME}_locations`]});const e=s.initIndex(`${process.env.ALGOLIA_INDEX_NAME}_locations`);return await e.setSettings({searchableAttributes:["parent","area"],attributesToRetrieve:["parent","area"],distinct:!0,customRanking:["asc(parent)","asc(area)"],attributesForFaceting:["parent","area"]}),console.log("Replica index configured successfully"),!0}catch(e){throw console.error("Error configuring replica index:",e),e}};e.get("/",((e,t)=>{console.log("GET / route hit"),t.send("Algolia reindex endpoint is working")})),e.post("/reindex",(async(e,t)=>{if(console.log("POST /reindex route hit"),null==e.accountability?.user)return console.log("Unauthorized access attempt"),t.json({message:"Unauthorized access attempt",success:!1});try{let s=0,o="";console.log("Clearing existing index"),await a.clearObjects(),o="Index cleared";const c=100,l=new r("properties",{schema:e.schema});let d=0,u=!0;for(;u;){console.log(`Processing page ${d}`);const e=await l.readByQuery({limit:c,offset:d*c});if(0===e.length){u=!1;continue}const t=e.map(n);await a.saveObjects(t),s+=e.length,d++,o=`Processed ${s} properties`}return console.log("Configuring location replica index..."),await i(),o=`Processed ${s} properties and configured location replica`,console.log("Reindex and replica configuration completed successfully"),t.json({message:`Reindex completed successfully. Processed ${s} properties and configured location replica.`,success:!0,total:s,lastStep:o})}catch(e){return console.error("Reindex error:",e),t.json({message:e.message||"Failed to update Algolia indexes",success:!1,error:!0})}})),console.log("Algolia reindex extension routes registered successfully")}catch(e){throw console.error("Error initializing Algolia reindex extension:",e),e}}};export{nt as default};
